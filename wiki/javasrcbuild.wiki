#Explains how to build the JAVA source code

= JAVA  Toolkit  Source Building =

== Building with Eclipse ==

To build the source of the  OOSTethys JAVA toolkit you need the following:
  * You will need a Java runtime environment ([http://www.eclipse.org/downloads/moreinfo/jre.php JRE]) to use Eclipse (Java 5 JRE recommended). 
  * Have Eclipse installed. Downloads [http://www.eclipse.org/downloads/ here]. The Eclipse IDE for Java Developers will work.
  * Install the [http://maven.apache.org/eclipse-plugin.html Maven Plugin] for Eclipse. We recommend installing [http://code.google.com/p/q4e/wiki/Installation Eclipse IAM]. 
    * Go to Help / Install New Software..
    * Select Add.. and type Eclipse IAM and http://q4e.googlecode.com/svn/trunk/updatesite-iam/.
    * Follow the rest of the steps to install the plugin
    * Depending on you Eclipe version you will need [http://subclipse.tigris.org/wiki/JavaHL JavaHL]. For MAC OS go [http://www.open.collab.net/downloads/apple/?_=d here]


Download the code from the SVN repository

  * In the menu select: Window / Show View / Other.. / SVN / SVN Repositories
  * Right click on the window and select 'new' / Repository location
  * Go to the google code page and get the URL for the SVN. If you have permissions you will see your login and paasword information
  * For example: URL:  http://code.google.com/p/oostethys/source/checkout



== Building from the command line ==

(this section from Jesper's 2009-06-20 email)

Here are step-by-step instructions for the command line (you can skipthe first two steps if you already have Maven installed on your system):
  # Download Maven from http://maven.apache.org/download.html
  # extract the archive file: tar xvfj apache-maven-2.1.0-bin.tar.bz2
  # check out the source code from the Subversion repository:
{{{
    svn co https://oostethys.googlecode.com/svn/trunk/component/server/java/oostethys-java-server
}}}
  # change into project's directory  cd oostethys-java-server
  # build the project: ../apache-maven-2.1.0/bin/mvn compile

Instead of "mvn compile" you can use "mvn jetty:run" to start a test server of "mvn test" to run the unit tests, etc.


= Details =
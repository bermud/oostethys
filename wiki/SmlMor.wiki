#summary development of the ORR-enabled SensorML/TEDS generator

Test: http://mmisw.org/smlmor/

= Status =

2009-10-14 version 0.0.2pre
  * Preliminary basic set of fields for contacts, system, and variables.
  * Any number of variables and systems, and unbounded system nesting
  * Generation of SensorML via oostethys model instantiation.
  * No TEDS generation
  * No integration of ORR services yet
  * Generates of a tree dump for testing and comparison. This is enabled with the `_log=y` parameter (http://mmisw.org/smlmor/?_log=y). Once the SensorML is generated, click the 'refresh log' button at the bottom. Preliminary tests seems to show that there are missing elements in the generated sensorml document.

= Introduction =

This page *is intended to document* the specification, requirements, and development of the [http://mmisw.org/orr/ ORR-enabled] SensorML/TEDS generator (codenamed 'sml-mor,' a combination of SensorML and MMI Ontology Registry and repository). 

<font color="blue">This is work in progress; please add your comments in this page or send them to the oostethys list. Thanks!</font>


= Goal =

The overall goal of this tool is to facilitate the creation of a formal document (SensorML or TEDS) with the basic definition of a sensor system (system type, variables, subsystems..) out from a set of fields provided by the user in a web-based graphical user interface and with integration of vocabulary terms and definitions from the [http://mmisw.org/orr/ MMI Ontology Registry and repository], ORR.

<font color="red">*NOTE*</font>: It is not an immediate goal to provide round-trip conversion/editing of the document (ie., eg., being able to load a SensorML doc to initialize the interface).

= Description =

The user defines systems, variables, and subsystems and the tool generates the corresponding SensorML or TEDS document. While filling out the fields, the user can access the ORR to help in the specification of system types and variables.  

The actual integration with the ORR is not yet implemented but here are possible general approaches:

  * Include a drop-down list for each field. This may not be as simple; in general, the user would actually do some form of search in order to identify the term, definition, or URI that is appropriate for the field.  

  * A more sophisticated approach would be some kind of wizard (sequence of steps) involving the look-up of terms and relationships in the MMI ORR for a complete section is the GUI.

= Generation mechanism =

== SensorML ==
The generation of SensorML is based on an intermediate OOSTethys model instantiation of the spec given by the user. The OOSTethys model instantiation is then translated into a SensorML format via an XSLT file available in the OOSTehys codebase.

== TEDS ==
Not implemented yet.


= Noteworthy changes =

2009-10-14 version 0.0.2pre
  * interface improved based on tabpanels
  * http://mmisw.org/smlmor/?_log=y generates a tree dump for testing and comparison. The generated SensorML seems to be missing some settings to properly specify systems and variables.

2009-10-12 first version, 0.0.1
  * generates SensorML (see [http://code.google.com/p/oostethys/source/browse/trunk/component/client/java/oostethys-java-smlmor/ChangeLog.txt ChangeLog]).
  * No yet integration with ORR

----
=== Some related stuff ===
  * SensorML PrettyView: http://vast.uah.edu/SensorMLforms/upload.jsp
  * SensorML editor: http://vast.uah.edu/index.php?option=com_content&view=article&id=149&Itemid=103

Interesting:
  * xsd2rng: http://code.google.com/p/xsdtorngconverter/
  * rng2xhtml:http://debeissat.nicolas.free.fr/RNGtoHTMLform.php
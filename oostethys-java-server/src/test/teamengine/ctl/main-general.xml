  <ctl:package xmlns:sosFunctions="https://cite.opengeospatial.org/sos-1.0.0/src/ctl/functions.xml"
  xmlns:getCapabilities="https://cite.opengeospatial.org/sos-1.0.0/src/ctl/GetCapabilities.xml"
  xmlns:describeSensor="https://cite.opengeospatial.org/sos-1.0.0/src/ctl/DescribeSensor.xml"
  xmlns:getObservation="https://cite.opengeospatial.org/sos-1.0.0/src/ctl/GetObservation.xml"
  xmlns:owsTests="https://www.cite.opengeospatial.org/ows-1.0/tests" xmlns:ctl="http://www.occamlab.com/ctl"
  xmlns:html="http://www.w3.org/1999/xhtml" xmlns:saxon="http://saxon.sf.net/"
  xmlns:tep="http://teamengine.sourceforge.net/parsers" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:parsers="http://www.occamlab.com/te/parsers" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:ows="http://www.opengis.net/ows/1.1" xmlns:gml="http://www.opengis.net/gml" xmlns:sos="http://www.opengis.net/sos/1.0"
  xmlns:ogc="http://www.opengis.net/ogc" xmlns:om="http://www.opengis.net/om/1.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <ctl:test name="sos:general-main">
      <ctl:param name="serviceURL" />
      <ctl:param name="exceptionReportSchema" />
      <ctl:assertion>All assertions for "general" conformance are satisfied.</ctl:assertion>
      <ctl:comment>
        <![CDATA[Test driver for the general module.]]>
</ctl:comment>
      <ctl:link title="2. General">docs/sos/1.0/SOS 1.0 ATS.html#general</ctl:link>
      <ctl:code>
        <ctl:message />
        <ctl:message>****************************</ctl:message>
        <ctl:message>Running General SOS Tests...</ctl:message>
        <ctl:message>****************************</ctl:message>
        <ctl:call-test name="sos:general-SOS.General-InvalidRequest.1">
          <ctl:with-param name="serviceURL" select="$serviceURL" />
          <ctl:with-param name="exceptionReportSchema" select="$exceptionReportSchema" />
        </ctl:call-test>
        <ctl:message>**********************************************************************</ctl:message>
        <ctl:call-test name="sos:general-SOS.General-ValidResponse.1">
          <ctl:with-param name="responseDocument" select="$serviceURL" />
        </ctl:call-test>
      </ctl:code>
    </ctl:test>
    <ctl:test name="sos:general-SOS.General-InvalidRequest.1">
      <ctl:param name="serviceURL" />
      <ctl:param name="exceptionReportSchema" />
      <ctl:assertion>Sending a request that is non-conformant to a schema associated with an SOS operation causes the server to
      return a valid error report message with an exceptionCode value of InvalidRequest.</ctl:assertion>
      <ctl:comment>
        <![CDATA[Send several test documents that are invalid according to the schemas associated with some of the SOS operations (i.e. the mandatory operations). Pass if the service returns a valid exception message with an exceptionCode value of InvalidRequest; fail otherwise.]]>
</ctl:comment>
      <ctl:link title="Verify that an invalid request produces an appropriate response from the server.">docs/sos/1.0/SOS 1.0
      ATS.html#SOS.General-InvalidRequest</ctl:link>
      <ctl:code>
        <!--
                    1.)  Issue several invalid request documents to the service.
                    2.)  Validate the response against the ExceptionReport schema.
                    3.)  If the response validates, then check that the exceptionCode value is "InvalidRequest"
                -->
        <ctl:message>Issuing an invalid request to: 
        <xsl:value-of select="$serviceURL" /></ctl:message>
        <ctl:message select="'The body of the request will be &quot;test&quot;'" />
        <xsl:variable name="invalidRequestResponse">
          <ctl:request>
            <ctl:url>
              <xsl:value-of select="$serviceURL" />
            </ctl:url>
            <ctl:method>post</ctl:method>
            <ctl:body>
              <![CDATA[test]]>
</ctl:body>
            <ctl:call-function name="sosFunctions:xmlValidatingParser">
              <ctl:with-param name="schemaFile" select="$exceptionReportSchema" />
            </ctl:call-function>
          </ctl:request>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="not($invalidRequestResponse/*)">
            <ctl:message>FAILURE: The server did not return a response to an invalid request or the response from the server was
            not a valid exception report. The response from the server was: " 
            <xsl:copy-of select="$invalidRequestResponse/*" />"</ctl:message>
            <ctl:message select="concat('Schema file: ', $exceptionReportSchema)" />
            <ctl:fail />
          </xsl:when>
          <xsl:otherwise>
            <ctl:message>The response was 
            <xsl:value-of select="sosFunctions:getExceptionInfo($invalidRequestResponse)" /></ctl:message>
            <ctl:message>Checking the validity of the response to an invalid request.</ctl:message>
            <xsl:variable name="isCorrect">
              <ctl:call-function name="sosFunctions:checkExceptionReport">
                <ctl:with-param name="exceptionReport" select="$invalidRequestResponse" />
                <ctl:with-param name="exceptionCodeToCheck" select="string('InvalidRequest')" />
                <ctl:with-param name="locatorToCheck" select="string('*')" />
              </ctl:call-function>
            </xsl:variable>
            <ctl:message>The validity check returned: 
            <xsl:value-of select="$isCorrect" /></ctl:message>
            <xsl:if test="not(xsd:boolean($isCorrect))">
              <ctl:message>FAILURE: The response to an invalid request was expected to be an exception report with an
              exceptionCode of "InvalidRequest" and a locator value containing the validation issue. The returned exception
              report was: " 
              <xsl:value-of select="$invalidRequestResponse/*" />"</ctl:message>
              <ctl:message select="concat('Returned exception code was: &quot;', sosFunctions:exceptionCode($invalidRequestResponse), '&quot;')" />
              <ctl:message select="'Expected exception code was: &quot;InvalidRequest&quot;'" />
              <ctl:fail />
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
      </ctl:code>
    </ctl:test>
    <ctl:test name="sos:general-SOS.General-ValidResponse.1">
      <ctl:param name="responseDocument" />
      <ctl:assertion>A response is a valid response for the SOS. This general assertion should be tested by all other
      tests.</ctl:assertion>
      <ctl:comment>
        <![CDATA[Tested through other tests.]]>
</ctl:comment>
      <ctl:link title="Verify that a response entity is schema-valid">docs/sos/1.0/SOS 1.0
      ATS.html#SOS.General-ValidResponse</ctl:link>
      <ctl:code>
        <ctl:message>This general assertion is tested by all other tests, so there is nothing specific to test
        now.</ctl:message>
      </ctl:code>
    </ctl:test>
  </ctl:package>
